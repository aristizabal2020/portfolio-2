---

const response = await fetch('https://api.aristizabal.dev/api/v1/discord/guild-info');

// const response = await fetch('https://api.example.com/data');
if (!response.ok) {
  throw new Error('Error al obtener los datos');
}

const data = await response.json();

// Verifica que 'data' es un objeto antes de acceder a sus propiedades
const isDataObject = data && typeof data === 'object';
---


{ isDataObject ? ( 
	<div class="info-bar">
	<div class="title-discord">
		{/* <strong>Estadísticas del Servidor de Discord:</strong> */}
		<strong>Discord Server Stats:</strong>
	</div>
    <div class="info-content">
      <a href="https://discord.com/invite/4kkEDSNbcT">
      <img src={data.icon} alt="Avatar">
      </a>
      <div>
        <a href="https://discord.com/invite/4kkEDSNbcT">
        <strong>ARISTIZABAL.dev</strong>
        </a>
        {/* <span>Descripción: Sin descripción</span> */}
        <span>Description: No description</span>
      </div>
    </div>
    <div class="stats">
      <div>
        <span>{data.memberCount}</span>
        <small>
          <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><path fill="#ffffff" d="M3.5 7a5 5 0 1 1 10 0a5 5 0 0 1-10 0M5 14a5 5 0 0 0-5 5v2h17v-2a5 5 0 0 0-5-5zm19 7h-5v-2c0-1.959-.804-3.73-2.1-5H19a5 5 0 0 1 5 5zm-8.5-9a5 5 0 0 1-1.786-.329A6.97 6.97 0 0 0 15.5 7a6.97 6.97 0 0 0-1.787-4.671A5 5 0 1 1 15.5 12"/></svg>
          Members
          </small>
      </div>
      <div>
        <span>{data.memberOnlineCount}</span>
        <small id="online-members">  
        <svg xmlns="http://www.w3.org/2000/svg" width="3em" height="3em" viewBox="0 0 24 24"><path fill="#008000" d="M14 19.5c0-2 1.1-3.8 2.7-4.7c-1.3-.5-2.9-.8-4.7-.8c-4.4 0-8 1.8-8 4v2h10zm5.5-3.5c-1.9 0-3.5 1.6-3.5 3.5s1.6 3.5 3.5 3.5s3.5-1.6 3.5-3.5s-1.6-3.5-3.5-3.5M16 8c0 2.2-1.8 4-4 4s-4-1.8-4-4s1.8-4 4-4s4 1.8 4 4"/></svg>
        On line
        </small>
      </div>
    </div>
  </div>
	)
  
  :

  (
	<p>No hay datos para mostrar.</p>
  )
}


<style>

#online-members {
	color: green;
	font-weight: 900;
}

.stats small svg {
  width: 1em; /* Ajusta al tamaño del texto */
  height: 1em; /* Ajusta al tamaño del texto */
  vertical-align: middle; /* Alinea el icono al centro del texto */
  margin-right: 5px; /* Espaciado entre el icono y el texto */
}

	.info-bar {
		/* border: 1px red solid; */
		padding-bottom: 10px;
      position: relative;
      top: 0;
      left: 0;
      width: 100%;
      background: rgba(0, 0, 0, 0.8);
      padding: 10px 20px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      color: white;
      font-size: 14px;
    }

    .info-bar img {
      width: 50px;
      height: 50px;
      border-radius: 50%;
      object-fit: cover;
      margin-right: 15px;
    }

    .info-content {
      display: flex;
      align-items: center;
      gap: 20px;
    }

    .info-content div {
      display: flex;
      flex-direction: column;
    }

    .info-content div span {
      font-size: 12px;
      color: #c4c4c4;
    }

    .stats {
      display: flex;
      align-items: center;
      gap: 15px;
    }

    .stats div {
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .stats div span {
      font-weight: bold;
      font-size: 14px;
      color: white;
    }


    {/* RESPONSIVE */}

    @media (max-width: 768px) {
    .info-bar {
        flex-direction: column; /* Cambia de horizontal a vertical */
        align-items: center; /* Alinea el contenido a la izquierda */
        padding: 15px;
        gap: 15px; /* Mayor separación entre elementos */
    }

    .info-content {
        flex-direction: column;
        align-items: center; /* Texto alineado a la izquierda */
        gap: 10px;
    }

    .info-bar img {
        margin-right: 0;
        margin-bottom: 10px;
    }

    .stats {
        flex-direction: row; /* Mantén los bloques de estadísticas en fila */
        justify-content: space-between;
        width: 100%; /* Asegura que las estadísticas ocupen todo el ancho */
    }

    .stats div {
        flex: 1; /* Asegura espacio igualitario entre los bloques */
    }

    .stats div span {
        font-size: 12px; /* Reduce el tamaño del texto en pantallas pequeñas */
    }
}




	
button {
  max-width: 320px;
  display: flex;
  overflow: hidden;
  position: relative;
  padding: 0.875rem 72px 0.875rem 1.75rem;
  background-color: rgba(88,101,242,1);
  background-image: linear-gradient(to top right,rgb(46, 56, 175),rgb(82, 93, 218));
  color: #ffffff;
  font-size: 15px;
  line-height: 1.25rem;
  font-weight: 700;
  text-align: center;
  text-transform: uppercase;
  vertical-align: middle;
  align-items: center;
  border-radius: 0.5rem;
  gap: 0.75rem;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  border: none;
  transition: all .6s  ease;
}

button span {
  background-color: rgb(82, 93, 218);
  display: grid;
  position: absolute;
  right: 0;
  place-items: center;
  width: 3rem;
  height: 100%;
}

button span svg {
  width: 1.5rem;
  height: 1.5rem;
}

button:hover {
  box-shadow: 0 4px 30px  rgba(4, 175, 255, .1), 0 2px 30px rgba(11, 158, 255, 0.06);
}
	
	






	.skills h2 {
		font-size: var(--text-lg);
	}

	.skills p {
		color: var(--gray-400);
	}

	@media (min-width: 50em) {
		.box {
			border-radius: 1.5rem;
			padding: 2.5rem;
		}

		.skills {
			display: grid;
			grid-template-columns: repeat(3, 1fr);
			gap: 5rem;
		}

		.skills h2 {
			font-size: var(--text-2xl);
		}
	}
</style>

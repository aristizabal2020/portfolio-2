---

const response = await fetch('https://api.aristizabal.dev/api/v1/discord/guild-info');

// const response = await fetch('https://api.example.com/data');
if (!response.ok) {
  throw new Error('Error al obtener los datos');
}

const data = await response.json();

// Verifica que 'data' es un objeto antes de acceder a sus propiedades
const isDataObject = data && typeof data === 'object';
---
<!-- <div class="container">

    <p id="server-name">Cargando información del servidor Discord...</p>
	{isDataObject ? (
		<div>
		  <h2>Nombre: {data.name}</h2>
		  <p><strong>ID:</strong> {data.id}</p>
		  <p><strong>Descripción:</strong> {data.description || 'No disponible'}</p>
		  <p><strong>Miembros:</strong> {data.memberCount}</p>
		  <p><strong>Miembros en línea:</strong> {data.memberOnlineCount}</p>
		  <img src={data.icon} alt="Icono" />
		</div>
	  ) : (
		<p>No se encontraron datos válidos o la respuesta no es un objeto.</p>
	  )}
	  

</div> -->

{ isDataObject ? ( 
	<div class="info-bar">
	<div class="title-discord">
		<strong>Estadísticas del Servidor de Discord:</strong>
	</div>
    <div class="info-content">
      <img src={data.icon} alt="Avatar">
      <div>
        <strong>ARISTIZABAL.dev</strong>
        <span>Descripción: No disponible</span>
      </div>
    </div>
    <div class="stats">
      <div>
        <span>{data.memberCount}</span>
        <small>Miembros</small>
      </div>
      <div>
        <span>{data.memberOnlineCount}</span>
        <small id="online-members">En línea</small>
      </div>
    </div>
  </div>
	)
  
  :

  (
	<p>No hay datos para mostrar.</p>
  )
}

<!-- <span>ID: 945430995971240006</span> -->

<!-- <button class="button">
  <img src="https://cdn-icons-png.flaticon.com/512/2111/2111370.png" alt="Discord Logo">
  Sign in
</button> -->
<!-- <a href="https://discord.com/oauth2/authorize?client_id=1309192247819898980&response_type=code&redirect_uri=https%3A%2F%2Fapi.aristizabal.dev%2Fprofile%2Fuser&scope=identify+email">
	<button>
	  ¡Reclama tu insignia!
	  <span>
		<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-discord" viewBox="0 0 16 16">
	  <path d="M13.545 2.907a13.227 13.227 0 0 0-3.257-1.011.05.05 0 0 0-.052.025c-.141.25-.297.577-.406.833a12.19 12.19 0 0 0-3.658 0 8.258 8.258 0 0 0-.412-.833.051.051 0 0 0-.052-.025c-1.125.194-2.22.534-3.257 1.011a.041.041 0 0 0-.021.018C.356 6.024-.213 9.047.066 12.032c.001.014.01.028.021.037a13.276 13.276 0 0 0 3.995 2.02.05.05 0 0 0 .056-.019c.308-.42.582-.863.818-1.329a.05.05 0 0 0-.01-.059.051.051 0 0 0-.018-.011 8.875 8.875 0 0 1-1.248-.595.05.05 0 0 1-.02-.066.051.051 0 0 1 .015-.019c.084-.063.168-.129.248-.195a.05.05 0 0 1 .051-.007c2.619 1.196 5.454 1.196 8.041 0a.052.052 0 0 1 .053.007c.08.066.164.132.248.195a.051.051 0 0 1-.004.085 8.254 8.254 0 0 1-1.249.594.05.05 0 0 0-.03.03.052.052 0 0 0 .003.041c.24.465.515.909.817 1.329a.05.05 0 0 0 .056.019 13.235 13.235 0 0 0 4.001-2.02.049.049 0 0 0 .021-.037c.334-3.451-.559-6.449-2.366-9.106a.034.034 0 0 0-.02-.019Zm-8.198 7.307c-.789 0-1.438-.724-1.438-1.612 0-.889.637-1.613 1.438-1.613.807 0 1.45.73 1.438 1.613 0 .888-.637 1.612-1.438 1.612Zm5.316 0c-.788 0-1.438-.724-1.438-1.612 0-.889.637-1.613 1.438-1.613.807 0 1.451.73 1.438 1.613 0 .888-.631 1.612-1.438 1.612Z"></path>
	</svg>
	  </span>
	</button>
</a> -->


<style>


#online-members {
	color: green;
	font-weight: 900;
}

	.info-bar {
		/* border: 1px red solid; */
		padding-bottom: 10px;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      background: rgba(0, 0, 0, 0.8);
      padding: 10px 20px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      color: white;
      font-size: 14px;
    }

    .info-bar img {
      width: 50px;
      height: 50px;
      border-radius: 50%;
      object-fit: cover;
      margin-right: 15px;
    }

    .info-content {
      display: flex;
      align-items: center;
      gap: 20px;
    }

    .info-content div {
      display: flex;
      flex-direction: column;
    }

    .info-content div span {
      font-size: 12px;
      color: #c4c4c4;
    }

    .stats {
      display: flex;
      align-items: center;
      gap: 15px;
    }

    .stats div {
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .stats div span {
      font-weight: bold;
      font-size: 14px;
      color: white;
    }




	
button {
  max-width: 320px;
  display: flex;
  overflow: hidden;
  position: relative;
  padding: 0.875rem 72px 0.875rem 1.75rem;
  background-color: rgba(88,101,242,1);
  background-image: linear-gradient(to top right,rgb(46, 56, 175),rgb(82, 93, 218));
  color: #ffffff;
  font-size: 15px;
  line-height: 1.25rem;
  font-weight: 700;
  text-align: center;
  text-transform: uppercase;
  vertical-align: middle;
  align-items: center;
  border-radius: 0.5rem;
  gap: 0.75rem;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  border: none;
  transition: all .6s  ease;
}

button span {
  background-color: rgb(82, 93, 218);
  display: grid;
  position: absolute;
  right: 0;
  place-items: center;
  width: 3rem;
  height: 100%;
}

button span svg {
  width: 1.5rem;
  height: 1.5rem;
}

button:hover {
  box-shadow: 0 4px 30px  rgba(4, 175, 255, .1), 0 2px 30px rgba(11, 158, 255, 0.06);
}
	
	






	.skills h2 {
		font-size: var(--text-lg);
	}

	.skills p {
		color: var(--gray-400);
	}

	@media (min-width: 50em) {
		.box {
			border-radius: 1.5rem;
			padding: 2.5rem;
		}

		.skills {
			display: grid;
			grid-template-columns: repeat(3, 1fr);
			gap: 5rem;
		}

		.skills h2 {
			font-size: var(--text-2xl);
		}
	}
</style>
